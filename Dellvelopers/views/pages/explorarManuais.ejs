<div
  class="flex flex-col lg:flex-row justify-between items-start w-full max-w-full px-4 md:px-12 gap-10"
>
  <!-- Container principal com layout flex em linha, espaçamento e preenchimento horizontal -->
  <div
    class="flex flex-col justify-center items-start w-full max-w-[300px] gap-5"
  >
    <!-- Seção esquerda com layout flex em coluna, centralizada verticalmente -->
    <h2 class="mb-3 font-light">Filtros</h2>
    <!-- Título da seção de filtros -->
    <div
      role="region"
      id="accordion-filter"
      class="dds__accordion w-full"
      data-dds="accordion"
    >
      <div class="dds__accordion__control">
        <button
          type="button"
          aria-disabled="false"
          class="dds__accordion__control__expand"
        >
          Expandir todos
        </button>
        <button
          type="button"
          aria-disabled="false"
          class="dds__accordion__control__collapse"
        >
          Recolher todos
        </button>
      </div>
      <div class="dds__accordion__item">
        <h5 class="dds__accordion__heading">
          <button
            type="button"
            id="accordion-item-trigger-306375151"
            class="dds__accordion__button"
            aria-expanded="false"
            aria-controls="accordion-item-content-306375151"
          >
            Ano de lançamento​
          </button>
        </h5>
        <div
          id="accordion-item-content-306375151"
          class="dds__accordion__content"
          role="region"
          aria-labelledby="accordion-item-trigger-306375151"
        >
          <div class="dds__accordion__body">
            <fieldset
              class="dds__fieldset dds__checkbox-group"
              aria-describedby="checkbox-error-468930579"
              required="true"
              aria-invalid="true"
              aria-required="true"
              role="group"
              data-type="publicationDate"
            >
              <div id="checkbox-id-274720257" class="dds__checkbox">
                <label
                  id="checkbox-label-274720257"
                  class="dds__checkbox__label"
                  for="checkbox-control-274720257"
                >
                  <input
                    type="checkbox"
                    tabindex="0"
                    id="checkbox-control-274720257"
                    name="checkbox-control-name-274720257"
                    class="dds__checkbox__input"
                    value="1"
                    required="true"
                  />
                  <span>2024</span>
                </label>
              </div>
              <div id="checkbox-id-598481730" class="dds__checkbox">
                <label
                  id="checkbox-label-598481730"
                  class="dds__checkbox__label"
                  for="checkbox-control-598481730"
                >
                  <input
                    type="checkbox"
                    tabindex="0"
                    id="checkbox-control-598481730"
                    name="checkbox-control-name-598481730"
                    class="dds__checkbox__input"
                    value="2"
                    required="true"
                  />
                  <span>2023</span>
                </label>
              </div>
              <div id="checkbox-id-882257609" class="dds__checkbox">
                <label
                  id="checkbox-label-882257609"
                  class="dds__checkbox__label"
                  for="checkbox-control-882257609"
                >
                  <input
                    type="checkbox"
                    tabindex="0"
                    id="checkbox-control-882257609"
                    name="checkbox-control-name-882257609"
                    class="dds__checkbox__input"
                    value="3"
                    required="true"
                  />
                  <span>2022</span>
                </label>
              </div>
              <div
                id="checkbox-error-468930579"
                class="dds__invalid-feedback dds__checkbox__error-text"
                aria-live="polite"
              >
                <span
                  class="dds__icon dds__icon--alert-error dds__error-text__icon"
                  aria-hidden="true"
                ></span>
                Erro no texto
              </div>
            </fieldset>
          </div>
        </div>
      </div>
      <div class="dds__accordion__item">
        <h5 class="dds__accordion__heading">
          <button
            type="button"
            id="accordion-item-trigger-306375151"
            class="dds__accordion__button"
            aria-expanded="false"
            aria-controls="accordion-item-content-306375151"
          >
            Tipo de produto
          </button>
        </h5>
        <div
          id="accordion-item-content-306375151"
          class="dds__accordion__content"
          role="region"
          aria-labelledby="accordion-item-trigger-306375151"
        >
          <div class="dds__accordion__body">
            <fieldset
              class="dds__fieldset dds__checkbox-group"
              aria-describedby="checkbox-error-468930579"
              required="true"
              aria-invalid="true"
              aria-required="true"
              role="group"
            >
              <div id="checkbox-id-129034812" class="dds__checkbox">
                <label
                  id="checkbox-label-129034812"
                  class="dds__checkbox__label"
                  for="checkbox-control-129034812"
                >
                  <input
                    type="checkbox"
                    tabindex="0"
                    id="checkbox-control-129034812"
                    name="checkbox-control-name-129034812"
                    class="dds__checkbox__input"
                    value="1"
                    required="true"
                  />
                  <span>Desktops</span>
                </label>
              </div>
              <div id="checkbox-id-523498204" class="dds__checkbox">
                <label
                  id="checkbox-label-523498204"
                  class="dds__checkbox__label"
                  for="checkbox-control-523498204"
                >
                  <input
                    type="checkbox"
                    tabindex="0"
                    id="checkbox-control-523498204"
                    name="checkbox-control-name-523498204"
                    class="dds__checkbox__input"
                    value="2"
                    required="true"
                  />
                  <span>Notebooks</span>
                </label>
              </div>
              <div id="checkbox-id-897731243" class="dds__checkbox">
                <label
                  id="checkbox-label-897731243"
                  class="dds__checkbox__label"
                  for="checkbox-control-897731243"
                >
                  <input
                    type="checkbox"
                    tabindex="0"
                    id="checkbox-control-897731243"
                    name="checkbox-control-name-897731243"
                    class="dds__checkbox__input"
                    value="3"
                    required="true"
                  />
                  <span>Servidores</span>
                </label>
              </div>
              <div
                id="checkbox-error-468930579"
                class="dds__invalid-feedback dds__checkbox__error-text"
                aria-live="polite"
              >
                <span
                  class="dds__icon dds__icon--alert-error dds__error-text__icon"
                  aria-hidden="true"
                ></span>
                Erro no texto
              </div>
            </fieldset>
          </div>
        </div>
      </div>
      
    </div>
  </div>
  <div class="flex flex-col w-full gap-5">
    <!-- Seção direita com layout flex em coluna e espaçamento -->
    <h2 class="mb-3">Busca</h2>
    <!-- Título da seção de busca -->
    <div class="flex flex-col gap-y-3">
      <!-- Container para a busca com layout flex em coluna -->
      <div
        class="dds__search"
        id="search-107457371"
        data-dds="search"
        role="search"
      >
        <!-- Campo de busca com identificador e função de busca -->
        <label
          id="search-label-664840308"
          for="search-control-664840308"
          class="dds__label"
          >Buscar Manuais</label
        >
        <!-- Rótulo do campo de busca -->
        <div class="dds__search__wrapper">
          <!-- Wrapper do campo de busca -->
          <input
            type="search"
            class="dds__search__control"
            name="search-control-664840308"
            id="search-control-664840308"
            autocomplete="off"
            placeholder="Pesquise aqui"
            aria-labelledby="search-label-664840308"
          />
          <!-- Campo de entrada para a busca -->
        </div>
      </div>
      <div class="w-full flex justify-between">
        <!-- Container para o número de resultados e dropdown, layout flexível -->
        <span class="mt-0" id="search_number"></span>
        <!-- Span para exibir o número de resultados -->
        <div class="dds__dropdown" data-dds="dropdown" id="dropdown-184116988">
          <!-- Container do dropdown com identificador -->
          <div class="dds__dropdown__input-container">
            <!-- Container para o input do dropdown -->
            <label
              id="dropdown-label-497973251"
              for="dropdown-control-497973251"
              class="dds__label"
              >Ordernar por:</label
            >
            <!-- Rótulo do dropdown -->
            <div
              class="dds__dropdown__input-wrapper"
              autocomplete="off"
              aria-haspopup="listbox"
              aria-controls="dropdown-popup-497973251"
            >
              <!-- Wrapper do input do dropdown com atributos de acessibilidade -->
              <input
                id="dropdown-control-497973251"
                name="dropdown-name"
                type="text"
                role="combobox"
                class="dds__dropdown__input-field"
                aria-labelledby="dropdown-label-497973251 dropdown-helper-497973251"
                autocomplete="off"
                aria-expanded="false"
                aria-controls="dropdown-popup-list-497973251"
              />
              <!-- Campo de entrada do dropdown -->
            </div>
          </div>
          <div
            id="dropdown-popup-497973251"
            class="dds__dropdown__popup dds__dropdown__popup--hidden"
            role="presentation"
            tabindex="-1"
          >
            <!-- Popup do dropdown, inicialmente oculto -->
            <ul
              class="dds__dropdown__list"
              role="listbox"
              tabindex="-1"
              id="dropdown-popup-list-497973251"
            >
              <!-- Lista de opções do dropdown -->
              <li class="dds__dropdown__item" role="none">
                <button
                  type="button"
                  class="dds__dropdown__item-option"
                  role="option"
                  data-selected="false"
                  data-value="1"
                  tabindex="-1"
                >
                  <!-- Opção 1 do dropdown -->
                  <span class="dds__dropdown__item-label"
                    >Ordem alfabética (A-Z)</span
                  >
                </button>
              </li>
              <li class="dds__dropdown__item" role="none">
                <button
                  type="button"
                  class="dds__dropdown__item-option"
                  role="option"
                  data-selected="false"
                  data-value="2"
                  tabindex="-1"
                >
                  <!-- Opção 2 do dropdown -->
                  <span class="dds__dropdown__item-label"
                    >Ordem alfabética (Z-A)</span
                  >
                </button>
              </li>
              <li class="dds__dropdown__item" role="none">
                <button
                  type="button"
                  class="dds__dropdown__item-option"
                  role="option"
                  data-selected="false"
                  data-value="3"
                  tabindex="-1"
                >
                  <!-- Opção 3 do dropdown -->
                  <span class="dds__dropdown__item-label">Mais recentes</span>
                </button>
              </li>
              <li class="dds__dropdown__item" role="none">
                <button
                  type="button"
                  class="dds__dropdown__item-option"
                  role="option"
                  data-selected="false"
                  data-value="4"
                  tabindex="-1"
                >
                  <!-- Opção 4 do dropdown -->
                  <span class="dds__dropdown__item-label">Mais antigos</span>
                </button>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
    <div
      id="handbook-gallery"
      style="grid-template-columns: repeat(auto-fill, minmax(220px, 1fr))"
      class="w-auto"
    >
      <!-- Galeria de manuais com layout de grade responsivo -->
      <div
        class="dds__loading-indicator flex flex-col w-full justify-center items-center"
      >
        <div
          class="dds__loading-indicator__label w-full flex flex-row items-center justify-center"
          aria-live="polite"
        >
          Carregando Manuais
        </div>
        <div
          class="dds__loading-indicator__spinner w-full flex flex-row items-center justify-center"
        ></div>
      </div>
      <!-- Mensagem de carregamento dos produtos -->
    </div>
  </div>
</div>

<script>
  anoSelected = [];
  tipoDeProdutoSelected = [];
  tipoDeArquivoAdicionalSelected = [];

  const anos = [
    { id: 1, name: '2024' },
    { id: 2, name: '2023' },
    { id: 3, name: '2022' },
  ];

  const tiposDeProduto = [
    { id: 1, name: 'Desktop' },
    { id: 2, name: 'Notebook' },
    { id: 3, name: 'Servidor' },
  ];

  const tiposDeArquivosAdicionais = [
    { id: 1, name: 'Aúdios' },
    { id: 2, name: 'Documentos de texto' },
    { id: 3, name: 'Modelos 3D' },
    { id: 4, name: 'Vídeos' },
  ];

  const accordionFilter = document.getElementById('accordion-filter');
  DDS.Accordion(accordionFilter, { independent: true });

  // Initialize nested accordions, if available
  accordionFilter.querySelectorAll('.dds__accordion').forEach((child) => {
    DDS.Accordion(child, { independent: true });
  });

  const inputSearch = document.getElementById('search-control-664840308');
  let listaDeHandbooks = [];
  let searchValue = '';
  let order = 0;
  DDS.Search(inputSearch);

  inputSearch.addEventListener('ddsSearchSubmitEvent', (event) => {
    searchValue = event.target.value;
    renderHandbooks();
  });

  const dropdownOrder = document.getElementById('dropdown-184116988');
  const orderAPI = DDS.Dropdown(dropdownOrder);
  orderAPI.selectOption('4');

  dropdownOrder.addEventListener('ddsDropdownSelectionChangeEvent', (event) => {
    order = parseInt(event.detail.value);
    renderHandbooks();
  });

  // on page load, fetch all handbooks
  const fetchHandbooks = async () => {
    try {
      const fetchResult = await fetch('/handbooks');
      listaDeHandbooks = await fetchResult.json();
      renderHandbooks();
    } catch (error) {
      console.error('Error fetching handbooks:', error);
    }
  };

  const renderHandbooks = async () => {
    const handbookGallery = document.getElementById('handbook-gallery'); // Obtém o elemento da galeria de manuais
    handbookGallery.innerHTML = ''; //limpa a galeria de manuais
    handbookGallery.classList.add('grid', 'gap-4', 'w-auto'); // Adiciona classes de grid, espaçamento e largura automática

    const filteredHandbooks1 = listaDeHandbooks.filter((handbook) => {
      if (searchValue.trim() === '') return true;

      return handbook.productName
        .toLowerCase()
        .includes(searchValue.toLowerCase());
    });

    const filteredHandbooks2 = filteredHandbooks1.filter((handbook) => {
      if (anoSelected.length === 0) return true;

      if (handbook.uploadDate.includes(anos[0].name)) {
        return anoSelected.includes(1);
      }

      if (handbook.uploadDate.includes(anos[1].name)) {
        return anoSelected.includes(2);
      }

      if (handbook.uploadDate.includes(anos[2].name)) {
        return anoSelected.includes(3);
      }

      return false;
    });

    const filteredHandbooks = filteredHandbooks2.filter((handbook) => {
      if (tipoDeProdutoSelected.length === 0) return true;

      if (
        handbook.id_associatedAssembleLine?.productType ===
        tiposDeProduto[0].name
      ) {
        return tipoDeProdutoSelected.includes(1);
      }

      if (
        handbook.id_associatedAssembleLine?.productType ===
        tiposDeProduto[1].name
      ) {
        return tipoDeProdutoSelected.includes(2);
      }

      if (
        handbook.id_associatedAssembleLine?.productType ===
        tiposDeProduto[2].name
      ) {
        return tipoDeProdutoSelected.includes(3);
      }

      return false;
    });

    if (order === 1) {
      filteredHandbooks.sort((a, b) => a.name.localeCompare(b.name));
    } else if (order === 2) {
      filteredHandbooks.sort((a, b) => b.name.localeCompare(a.name));
    } else if (order === 3) {
      filteredHandbooks.sort(
        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)
      );
    } else if (order === 4) {
      filteredHandbooks.sort(
        (a, b) => new Date(a.createdAt) - new Date(b.createdAt)
      );
    }

    const searchNumberSpan = document.getElementById('search_number'); // Obtém o elemento do número de resultados
    searchNumberSpan.innerHTML = `Resultado da pesquisa: ${filteredHandbooks.length}`; // Exibe o número de resultados

    const myFavorites = await fetch('/users/favorites').then((res) =>
      res.json()
    );

    filteredHandbooks.forEach((handbook) => {
      let isFavorite = myFavorites.some(
        (favorite) => favorite.id_associatedHandbook === handbook.id
      );

      // Itera sobre cada manual
      const handbookElement = document.createElement('div'); // Cria um novo elemento div para cada manual
      handbookElement.id = handbook.id; // Define o ID do elemento com o ID do manual
      handbookElement.classList.add(
        'flex', // Adiciona classe flex
        'flex-col', // Adiciona classe flex-col
        'bg-gray-100', // Adiciona classe bg-gray-100
        'justify-center', // Adiciona classe justify-center
        'items-center', // Adiciona classe items-center
        'shadow-sm', // Adiciona classe shadow-sm
        'p-8' // Adiciona classe p-8
      );
      handbookElement.innerHTML = `
          <div class="handbookHandbookImage w-full flex items-center justify-center py-2 px-4">
            <img src="/images/productsImages/${handbook.images}" alt="" class="max-w-[200px] mb-3 handbookHandbookImageSelector w-full" />
          </div>
          <div class="handbookHandbookInformation w-full flex flex-col gap-6">
            <div class="handbookHandbookInformationHeader flex flex-row justify-between items-center w-full">
              <h5 class="handbookHandbookInformationHeaderName m-0">${handbook.productName}</h5>
              <button id="favorite-${handbook.id}" class="favoriteButton aspect-square">

                ${
                  isFavorite
                    ? '<svg class="dds__icon dds__icon--heart-filled text-[#0672cb]" focusable="false"><use xlink:href="#dds__icon--heart-filled"></use></svg>'
                    : '<svg class="dds__icon dds__icon--heart" focusable="false"><use xlink:href="#dds__icon--heart"></use></svg>'
                }

              </button>
            </div>
            <div class="handbookHandbookInformationLink flex flex-row w-full justify-start">
              <div class="linkButton flex flex-row justify-start items-center w-full gap-2">
                <a class="handbookHandbookInformationHeaderName flex flex-row items-center w-auto dds__body-3 gap-2" href="/handbooks/${handbook.id}">
                  Acessar Manual        
                  <img src="images/rightArrow.svg" alt="" class="svgLinkArrowRight  w-auto max-h-auto" />
                </a>
              </div>
            </div>
          </div>
        `; // Define o HTML interno do elemento do manual

      const favoriteButton = handbookElement.querySelector(
        `#favorite-${handbook.id}`
      );

      favoriteButton.addEventListener('click', async () => {
        isFavorite = !isFavorite;
        favoriteButton.innerHTML = `
          
          ${
            isFavorite
              ? '<svg class="dds__icon dds__icon--heart-filled text-[#0672cb]" focusable="false"><use xlink:href="#dds__icon--heart-filled"></use></svg>'
              : '<svg class="dds__icon dds__icon--heart " focusable="false"><use xlink:href="#dds__icon--heart"></use></svg>'
          }
        `;
        const favoriteStatus = await fetch(`/users/favorite`, {
          method: 'POST',
          body: JSON.stringify({ handbookId: handbook.id }),
        }).then((res) => res.json());

        favoriteButton.innerHTML = `
          
                ${
                  favoriteStatus?.favorite
                    ? '<svg class="dds__icon dds__icon--heart-filled text-[#0672cb]" focusable="false"><use xlink:href="#dds__icon--heart-filled"></use></svg>'
                    : '<svg class="dds__icon dds__icon--heart " focusable="false"><use xlink:href="#dds__icon--heart"></use></svg>'
                }
        `;

        // renderHandbooks();
      });

      const handbookLink = handbookElement.querySelector('.linkButton'); // Obtém o elemento do link do manual
      handbookLink?.addEventListener('click', (event) => {
        // Adiciona um evento de clique ao link do manual
        event.stopPropagation(); // Impede a propagação do evento de clique
      });

      handbookGallery.appendChild(handbookElement); // Adiciona o elemento do manual à galeria
    });
  };
  fetchHandbooks();

  // Ensure DDS library is loaded
  if (typeof DDS !== 'undefined') {
    // Verifica se a biblioteca DDS está carregada
    // This makes the dropdown work
    const dropdown184116988 = document.getElementById('dropdown-184116988'); // Obtém o elemento do dropdown
    DDS.Dropdown(dropdown184116988, { selectAll: false }); // Inicializa o dropdown com a biblioteca DDS

    // This makes the search work
    const searchHandbook = document.getElementById('search-107457371'); // Obtém o elemento de busca
    DDS.Search(searchHandbook); // Inicializa a busca com a biblioteca DDS
  } else {
    console.error(
      'DDS is not defined. Ensure the DDS library is correctly included.' // Loga um erro caso a biblioteca DDS não esteja definida
    );
  }

  const filterCheckboxInput = document.querySelectorAll(
    '.dds__checkbox__input'
  );

  filterCheckboxInput.forEach((checkbox) => {
    checkbox.addEventListener('change', (event) => {
      // check if checkbox id is checkbox-control-274720257
      if (event.target.id === 'checkbox-control-274720257') {
        if (event.target.checked) {
          anoSelected.push(1);
        } else {
          anoSelected = anoSelected.filter((item) => item !== 1);
        }
      }
      if (event.target.id === 'checkbox-control-598481730') {
        if (event.target.checked) {
          anoSelected.push(2);
        } else {
          anoSelected = anoSelected.filter((item) => item !== 2);
        }
      }
      if (event.target.id === 'checkbox-control-882257609') {
        if (event.target.checked) {
          anoSelected.push(3);
        } else {
          anoSelected = anoSelected.filter((item) => item !== 3);
        }
      }

      if (event.target.id === 'checkbox-control-129034812') {
        if (event.target.checked) {
          tipoDeProdutoSelected.push(1);
        } else {
          tipoDeProdutoSelected = tipoDeProdutoSelected.filter(
            (item) => item !== 1
          );
        }
      }
      if (event.target.id === 'checkbox-control-523498204') {
        if (event.target.checked) {
          tipoDeProdutoSelected.push(2);
        } else {
          tipoDeProdutoSelected = tipoDeProdutoSelected.filter(
            (item) => item !== 2
          );
        }
      }
      if (event.target.id === 'checkbox-control-897731243') {
        if (event.target.checked) {
          tipoDeProdutoSelected.push(3);
        } else {
          tipoDeProdutoSelected = tipoDeProdutoSelected.filter(
            (item) => item !== 3
          );
        }
      }

      renderHandbooks();
    });
  });
</script>
